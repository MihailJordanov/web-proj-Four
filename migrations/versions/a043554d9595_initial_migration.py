"""Initial migration

Revision ID: a043554d9595
Revises: 
Create Date: 2024-09-06 18:51:21.006773

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a043554d9595'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('matches', schema=None) as batch_op:
        batch_op.alter_column('home_team',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('away_team',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('home_team_result',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('away_team_result',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('users_matches', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('match_id', sa.Integer(), nullable=False))
        batch_op.drop_constraint('users_matches_id_match_fkey', type_='foreignkey')
        batch_op.drop_constraint('users_matches_id_user_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'matches', ['match_id'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.drop_column('id_match')
        batch_op.drop_column('id_user')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users_matches', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id_user', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('id_match', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('users_matches_id_user_fkey', 'users', ['id_user'], ['id'])
        batch_op.create_foreign_key('users_matches_id_match_fkey', 'matches', ['id_match'], ['id'])
        batch_op.drop_column('match_id')
        batch_op.drop_column('user_id')
        batch_op.drop_column('id')

    with op.batch_alter_table('matches', schema=None) as batch_op:
        batch_op.alter_column('away_team_result',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('home_team_result',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('away_team',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.alter_column('home_team',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)

    # ### end Alembic commands ###
